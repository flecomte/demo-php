version: '3.7'
services:
  producer-dev:
    image: ${NAME}_producer-dev
    container_name: ${NAME}_producer-dev
    build:
      context: producer
      args:
        NAME: ${NAME}_producer
    environment:
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_HOST: rabbitmq
      NAME: ${NAME}_producer
      APP_ENV: dev
    volumes:
      - ../../Producer/:/www/${NAME}_producer:rw
    links:
      - "db"
      - "db:database"
      - "db:postgresql"

  db:
    image: ${NAME}_postgresql-dev
    container_name: ${NAME}_postgresql-dev
    build:
      context: postgresql
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./var/log/postgresql:/var/log/postgresql:rw
      - db-data:/var/lib/postgresql/data:rw
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 3s
      timeout: 2s
      retries: 20

  rabbitmq:
    container_name: ${NAME}_rabbitmq
    image: rabbitmq:management-alpine
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_MANAGEMENT_PORT}:15672

  migration-dev:
    image: ${NAME}_migration-dev
    container_name: ${NAME}_migration-dev
    build:
      context: migration
      args:
        NAME: ${NAME}_migration
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NAME: ${NAME}_migration
      APP_ENV: dev
    volumes:
      - ../../Migration/:/www/${NAME}_migration:rw
    links:
      - "db"
      - "db:database"
      - "db:postgresql"

volumes:
  db-data: